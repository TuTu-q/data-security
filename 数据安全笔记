项目：搭建学生管理系统
1.建立数据库
  mysql -uroot -p
  CREATE DATABASE student_sys

2.根据需求建立《学生信息表》《学生成绩表》
  学生信息表
  CREATE TABLE IF NOT EXISTS `studentinfo`(
   `stu_id` INT UNSIGNED AUTO_INCREMENT,
   `stu_name` VARCHAR(25) NOT NULL,
   `stu_sex` VARCHAR(10) NOT NULL,
   `stu_num` VARCHAR(100)NOT NULL,
   `stu_code` VARCHAR(100)NOT NULL,
   PRIMARY KEY ( `stu_id` )
  )ENGINE=InnoDB DEFAULT CHARSET=utf8;

  学生成绩表
  CREATE TABLE IF NOT EXISTS `studentrecord`(
   `record_id` INT UNSIGNED AUTO_INCREMENT,
   `stu_num` VARCHAR(100)NOT NULL,
   `match_record` INT NOT NULL,
   `datasec_record` INT NOT NULL,
   PRIMARY KEY ( `record_id` )
  )ENGINE=InnoDB DEFAULT CHARSET=utf8;

  USE student_sys;
  SHOW TABLES;
  SHOW COLUMNS FROM studentinfo;
  SHOW COLUMNS FROM studentrecord;

  /*****************************************/
  /*****************************************/
  --插入数据
  /* 学生信息 */
  单条数据输入：
  INSERT INTO studentinfo
  (stu_id, stu_name,stu_sex,stu_num,stu_code)
   VALUES
  ("", "李三", "男","AT08474","62513257312636");


  多条数据输入：
   INSERT INTO studentinfo
  (stu_id, stu_name,stu_sex,stu_num,stu_code)
   VALUES
  ("", "黄三", "男","AT08908","67346873246878"),
  ("", "张小丽", "女","AT08490","73984732984783"); 

  /* 学生成绩 */
  多条数据输入：
   INSERT INTO studentrecord
  (record_id, stu_num,match_record,datasec_record)
   VALUES
  ("", "AT08908", "80","85"),
  ("", "AT08474", "90","70"),
  ("", "AT08490", "95","95"); 

  --查询数据
  SELECT COUNT(*) FROM studentinfo;
  SELECT * FROM studentinfo;
  SELECT stu_id,stu_name,stu_sex,stu_num,stu_code FROM studentinfo;

  ------ 显示条数查询
  SELECT * FROM studentinfo LIMIT 0,100;

  ------ 联合查询
  SELECT stu_id,stu_name,stu_sex,stu_num,stu_code 
  FROM studentinfo
  UNION
  SELECT ALL FROM studentrecord;

  Example01
  SELECT stu_name,stu_num
  FROM studentinfo
  UNION
  SELECT match_record,datasec_record
  FROM studentrecord;


  ------ 带条件查询
  SELECT * FROM studentinfo LIMIT 0,100;
  SELECT * 
  FROM studentinfo 
  WHERE stu_name = "黄三";
  
  ------ 模糊查询 LIKE
  SELECT * FROM studentinfo LIMIT 0,100;
  SELECT * 
  FROM studentinfo 
  WHERE stu_name LIKE "黄%";
 
  SELECT * FROM studentinfo LIMIT 0,100;
  SELECT * 
  FROM studentinfo 
  WHERE stu_name LIKE "%黄%";

  ------ 排序 ORDER BY
  SELECT field1, field2,...fieldN table_name1, table_name2...
  ORDER BY field1 [ASC [DESC][默认 ASC]], [field2...] [ASC [DESC][默认 ASC]]
   
  SELECT stu_num,match_record,datasec_record
  FROM studentrecord
  WHERE match_record >= 90
  ORDER BY match_record;

  ------ 分组 GROUP BY
  SELECT match_record,COUNT(*) datasec_record
  FROM studentrecord
  GROUP BY match_record;

  --删除数据
  DELETE FROM studentinfo WHERE stu_name = "黄三";
  
  --更新数据
  UPDATE table_name SET field1=new-value1, field2=new-value2 [WHERE Clause]
  UPDATE studentinfo 
  SET stu_name="黄四" 
  WHERE stu_name = "黄三";

  /*****************************************/
  /*****************************************/
  --MYSQL注入
  --https://websec.ca/kb/sql_injection

  学生系统  -> 学生信息登录
  
  表单 $stu_num  = AT08908\
  查询回来结果 result = SELECT * FROM studentinfo WHERE stu_num = '$stu_num';
  SELECT * FROM studentinfo WHERE stu_num = 'AT08908\';
 
  if  !empty(result)
      登录成功
  else
      登录失败
 
  学生系统  -> 成绩查询
  表单 $match_record  = 90 AND 0;
  查询回来结果 result = SELECT match_record FROM studentrecord WHERE match_record = $match_record;
  result = SELECT COUNT(match_record) FROM studentrecord WHERE match_record = 90 AND 0;

  学生成绩表
  CREATE TABLE IF NOT EXISTS `studentrecord`(
   `record_id` INT UNSIGNED AUTO_INCREMENT,
   `stu_num` VARCHAR(100)NOT NULL,
   `match_record` INT NOT NULL,
   `datasec_record` INT NOT NULL,
   PRIMARY KEY ( `record_id` )
  )ENGINE=InnoDB DEFAULT CHARSET=utf8;

  
  黑客大曝光
  Kali Linux高级渗透测试（原书第2版） 
  Kali Linux渗透测试技术详解 
  Kali渗透测试技术实战

  0x0001 主机远程ssh管理配置
    Xshell
  
  0x0010 安装包上传到服务器  
    运维主机向服务器上传安装包可以使用工具
    putty PSCP
    XFtp
    lrzsz

  0x0011
    Mysql 安装 eJPGC6jw83+w
